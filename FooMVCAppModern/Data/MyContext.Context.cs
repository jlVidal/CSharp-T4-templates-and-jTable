//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FooMVCAppModern.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MetadataTestEntities : DbContext
    {
        public MetadataTestEntities()
            : base("name=MetadataTestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Foo> Foos { get; set; }
    
        public virtual int Foo_Insert(Nullable<System.DateTime> lastUpdate, Nullable<bool> active, Nullable<bool> otherFlag, Nullable<int> fKFirstNotNull, Nullable<int> fKSecondNull, Nullable<int> fKThirdDefaultValue, string labels, ObjectParameter id)
        {
            var lastUpdateParameter = lastUpdate.HasValue ?
                new ObjectParameter("LastUpdate", lastUpdate) :
                new ObjectParameter("LastUpdate", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var otherFlagParameter = otherFlag.HasValue ?
                new ObjectParameter("OtherFlag", otherFlag) :
                new ObjectParameter("OtherFlag", typeof(bool));
    
            var fKFirstNotNullParameter = fKFirstNotNull.HasValue ?
                new ObjectParameter("FKFirstNotNull", fKFirstNotNull) :
                new ObjectParameter("FKFirstNotNull", typeof(int));
    
            var fKSecondNullParameter = fKSecondNull.HasValue ?
                new ObjectParameter("FKSecondNull", fKSecondNull) :
                new ObjectParameter("FKSecondNull", typeof(int));
    
            var fKThirdDefaultValueParameter = fKThirdDefaultValue.HasValue ?
                new ObjectParameter("FKThirdDefaultValue", fKThirdDefaultValue) :
                new ObjectParameter("FKThirdDefaultValue", typeof(int));
    
            var labelsParameter = labels != null ?
                new ObjectParameter("Labels", labels) :
                new ObjectParameter("Labels", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Foo_Insert", lastUpdateParameter, activeParameter, otherFlagParameter, fKFirstNotNullParameter, fKSecondNullParameter, fKThirdDefaultValueParameter, labelsParameter, id);
        }
    
        public virtual ObjectResult<Foo_List_Result> Foo_List(Nullable<int> pageIndex, Nullable<int> pageQty, string orderBy, string sortDirection, ObjectParameter totalCount)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageQtyParameter = pageQty.HasValue ?
                new ObjectParameter("PageQty", pageQty) :
                new ObjectParameter("PageQty", typeof(int));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var sortDirectionParameter = sortDirection != null ?
                new ObjectParameter("SortDirection", sortDirection) :
                new ObjectParameter("SortDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Foo_List_Result>("Foo_List", pageIndexParameter, pageQtyParameter, orderByParameter, sortDirectionParameter, totalCount);
        }
    
        public virtual int Foo_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Foo_Delete", idParameter);
        }
    
        public virtual int Foo_Update(Nullable<int> id, Nullable<System.DateTime> lastUpdate, Nullable<bool> active, Nullable<bool> otherFlag, Nullable<int> fKFirstNotNull, Nullable<int> fKSecondNull, Nullable<int> fKThirdDefaultValue, string labels)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var lastUpdateParameter = lastUpdate.HasValue ?
                new ObjectParameter("LastUpdate", lastUpdate) :
                new ObjectParameter("LastUpdate", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var otherFlagParameter = otherFlag.HasValue ?
                new ObjectParameter("OtherFlag", otherFlag) :
                new ObjectParameter("OtherFlag", typeof(bool));
    
            var fKFirstNotNullParameter = fKFirstNotNull.HasValue ?
                new ObjectParameter("FKFirstNotNull", fKFirstNotNull) :
                new ObjectParameter("FKFirstNotNull", typeof(int));
    
            var fKSecondNullParameter = fKSecondNull.HasValue ?
                new ObjectParameter("FKSecondNull", fKSecondNull) :
                new ObjectParameter("FKSecondNull", typeof(int));
    
            var fKThirdDefaultValueParameter = fKThirdDefaultValue.HasValue ?
                new ObjectParameter("FKThirdDefaultValue", fKThirdDefaultValue) :
                new ObjectParameter("FKThirdDefaultValue", typeof(int));
    
            var labelsParameter = labels != null ?
                new ObjectParameter("Labels", labels) :
                new ObjectParameter("Labels", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Foo_Update", idParameter, lastUpdateParameter, activeParameter, otherFlagParameter, fKFirstNotNullParameter, fKSecondNullParameter, fKThirdDefaultValueParameter, labelsParameter);
        }
    }
}
